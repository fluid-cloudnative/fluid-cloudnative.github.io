"use strict";(self.webpackChunkfluid_website_demo=self.webpackChunkfluid_website_demo||[]).push([[3048],{384:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var o=t(7624),s=t(2172);const a={sidebar_label:"How to Enable FUSE Auto-recovery",sidebar_position:7},i="How to Enable FUSE Auto-recovery",r={id:"tutorials/advanced/how-to-enable-fuse-auto-recovery",title:"How to Enable FUSE Auto-recovery",description:"Installation",source:"@site/docs/tutorials/advanced/how-to-enable-fuse-auto-recovery.md",sourceDirName:"tutorials/advanced",slug:"/tutorials/advanced/how-to-enable-fuse-auto-recovery",permalink:"/zh/docs/tutorials/advanced/how-to-enable-fuse-auto-recovery",draft:!1,unlisted:!1,editUrl:"https://github.com/fluid-cloudnative/fluid-cloudnative.github.io/tree/master/docs/tutorials/advanced/how-to-enable-fuse-auto-recovery.md",tags:[],version:"current",lastUpdatedBy:"chenqiming",lastUpdatedAt:1712563663,formattedLastUpdatedAt:"2024\u5e744\u67088\u65e5",sidebarPosition:7,frontMatter:{sidebar_label:"How to Enable FUSE Auto-recovery",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Set FUSE Clean Policy",permalink:"/zh/docs/tutorials/advanced/set-fuse-clean-policy"},next:{title:"How to Run in Knative Environment",permalink:"/zh/docs/tutorials/advanced/serverless/how-to-run-in-knative-environment"}},d={},l=[{value:"Installation",id:"installation",level:2},{value:"Demo",id:"demo",level:2},{value:"Test FUSE mount point auto recovery",id:"test-fuse-mount-point-auto-recovery",level:2},{value:"Notice",id:"notice",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.M)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"how-to-enable-fuse-auto-recovery",children:"How to Enable FUSE Auto-recovery"}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsxs)(n.p,{children:["You can download the latest Fluid installation package from ",(0,o.jsx)(n.a,{href:"https://github.com/fluid-cloudnative/fluid/releases",children:"Fluid Releases"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In Fluid chart values.yaml, set ",(0,o.jsx)(n.code,{children:"csi.featureGates"})," to ",(0,o.jsx)(n.code,{children:"FuseRecovery=true"}),", indicating enable FUSE auto-recovery.\nRefer to the ",(0,o.jsx)(n.a,{href:"/docs/get-started/installation",children:"Installation Documentation"})," to complete the installation. And check that the components of Fluid are running normally (here takes JuiceFSRuntime as an example):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ kubectl -n fluid-system get po\nNAME                                        READY   STATUS    RESTARTS   AGE\ncsi-nodeplugin-fluid-2gtsz                  2/2     Running   0          20m\ncsi-nodeplugin-fluid-2h79g                  2/2     Running   0          20m\ncsi-nodeplugin-fluid-sc459                  2/2     Running   0          20m\ndataset-controller-57fb4569cd-k2jb7         1/1     Running   0          20m\nfluid-webhook-844dcb995f-nfmjl              1/1     Running   0          20m\njuicefsruntime-controller-7d9c964b4-jnbtf   1/1     Running   0          20m\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Typically, you will see a Pod named ",(0,o.jsx)(n.code,{children:"dataset-controller"}),", a Pod named ",(0,o.jsx)(n.code,{children:"juicefsruntime-controller"}),", a Pod named ",(0,o.jsx)(n.code,{children:"fluid-webhook"}),"\nand multiple pods named ",(0,o.jsx)(n.code,{children:"csi-nodeplugin"})," are running. Among them, the number of ",(0,o.jsx)(n.code,{children:"csi-nodeplugin"})," these Pods depends on the number of nodes in your Kubernetes cluster."]}),"\n",(0,o.jsx)(n.h2,{id:"demo",children:"Demo"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Create dataset and runtime"})}),"\n",(0,o.jsxs)(n.p,{children:["Create corresponding Runtime resources and Datasets with the same name for different types of runtimes. Take JuiceFSRuntime as an example here. For details, please refer to ",(0,o.jsx)(n.a,{href:"https://github.com/fluid-cloudnative/fluid/blob/master/docs/en/samples/juicefs_runtime.md",children:"Documentation"}),", as follows:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ kubectl get juicefsruntime\nNAME      WORKER PHASE   FUSE PHASE   AGE\njfsdemo   Ready          Ready        2m58s\n$ kubectl get dataset\nNAME      UFS TOTAL SIZE   CACHED   CACHE CAPACITY   CACHED PERCENTAGE   PHASE   AGE\njfsdemo   [Calculating]    N/A                       N/A                 Bound   2m55s\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Create Pod"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'$ cat<<EOF >sample.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: demo-app\n  labels:\n    fuse.serverful.fluid.io/inject: "true"\nspec:\n  containers:\n    - name: demo\n      image: nginx\n      volumeMounts:\n        - mountPath: /data\n          name: demo\n  volumes:\n    - name: demo\n      persistentVolumeClaim:\n        claimName: jfsdemo\n  EOF\n$ kubectl create -f sample.yaml\npod/demo-app created\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The FUSE mount point auto-recovery feature requires the pod's mountPropagation to be set to ",(0,o.jsx)(n.code,{children:"HostToContainer"})," or ",(0,o.jsx)(n.code,{children:"Bidirectional"})," to pass the mount point information between the container and the host.\nAnd ",(0,o.jsx)(n.code,{children:"Bidirectional"})," requires the container to be a privileged container.\nFluid webhook helps automatically set the pod's mountPropagation to ",(0,o.jsx)(n.code,{children:"HostToContainer"}),". To enable this function, you need to set label ",(0,o.jsx)(n.code,{children:"fuse.serverful.fluid.io/inject=true"})," on the corresponding Pod's metadata (See the sample mentioned above)."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"See if the Pod is created and check its mountPropagation"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ kubectl get po |grep demo\ndemo-app             1/1     Running   0          96s\njfsdemo-fuse-g9pvp   1/1     Running   0          95s\njfsdemo-worker-0     1/1     Running   0          4m25s\n$ kubectl get po demo-app -oyaml |grep volumeMounts -A 3\n    volumeMounts:\n    - mountPath: /data\n      mountPropagation: HostToContainer\n      name: demo\n"})}),"\n",(0,o.jsx)(n.h2,{id:"test-fuse-mount-point-auto-recovery",children:"Test FUSE mount point auto recovery"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Delete FUSE pod"})}),"\n",(0,o.jsx)(n.p,{children:"Delete the FUSE pod, and waiting for it to restart:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'$ kubectl delete po jfsdemo-fuse-g9pvp\npod "jfsdemo-fuse-g9pvp" deleted\n$ kubectl get po\nNAME                 READY   STATUS    RESTARTS   AGE\ndemo-app             1/1     Running   0          5m7s\njfsdemo-fuse-bdsdt   1/1     Running   0          6s\njfsdemo-worker-0     1/1     Running   0          7m56s\n'})}),"\n",(0,o.jsx)(n.p,{children:"After the new FUSE pod is created, check the mount points in the demo pod:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ kubectl exec -it demo-app bash\nkubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.\n[root@demo-app /]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\noverlay         100G  9.4G   91G  10% /\ntmpfs            64M     0   64M   0% /dev\ntmpfs           2.0G     0  2.0G   0% /sys/fs/cgroup\nJuiceFS:minio   1.0P   64K  1.0P   1% /data\n/dev/sdb1       100G  9.4G   91G  10% /etc/hosts\nshm              64M     0   64M   0% /dev/shm\ntmpfs           3.8G   12K  3.8G   1% /run/secrets/kubernetes.io/serviceaccount\ntmpfs           2.0G     0  2.0G   0% /proc/acpi\ntmpfs           2.0G     0  2.0G   0% /proc/scsi\ntmpfs           2.0G     0  2.0G   0% /sys/firmware\n"})}),"\n",(0,o.jsxs)(n.p,{children:["It can be seen that there is no ",(0,o.jsx)(n.code,{children:"Transport endpoint is not connected"})," error in the container, indicating that the mount point has been restored."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Check dataset events"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ kubectl describe dataset jfsdemo\nName:         jfsdemo\nNamespace:    default\n...\nEvents:\n  Type    Reason              Age                  From         Message\n  ----    ------              ----                 ----         -------\n  Normal  FuseRecoverSucceed  2m34s (x5 over 11m)  FuseRecover  Fuse recover /var/lib/kubelet/pods/6c1e0318-858b-4ead-976b-37ccce26edfe/volumes/kubernetes.io~csi/default-jfsdemo/mount succeed\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can see that there is a ",(0,o.jsx)(n.code,{children:"FuseRecover"})," event in the Dataset event, indicating that Fluid has performed a recovery operation on the mount."]}),"\n",(0,o.jsx)(n.h2,{id:"notice",children:"Notice"}),"\n",(0,o.jsxs)(n.p,{children:["When the FUSE pod crashes, the recovery time of the mount point depends on the recovery of the FUSE pod itself and the period of the csi polling kubelet (env ",(0,o.jsx)(n.code,{children:"RECOVER_FUSE_PERIOD"}),").\nBefore the recovery, the mount point will still have a ",(0,o.jsx)(n.code,{children:"Transport endpoint is not connected"})," error, which is expected.\nIn addition, the mount point recovery is accomplished by bind mount repeatedly. For the file descriptors that have been opened by the application before the FUSE pod crash,\ncannot be recovered even after the mount point recovered. The application itself needs to retry when an error occurs and enhance its robustness."]})]})}function u(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>r,M:()=>i});var o=t(1504);const s={},a=o.createContext(s);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);