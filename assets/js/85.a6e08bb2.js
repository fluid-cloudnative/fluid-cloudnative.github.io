(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{445:function(t,a,s){"use strict";s.r(a);var e=s(19),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"示例-fluid访问hdfs所需的特殊配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-fluid访问hdfs所需的特殊配置"}},[t._v("#")]),t._v(" 示例 - Fluid访问HDFS所需的特殊配置")]),t._v(" "),a("p",[t._v("如果选择HDFS作为Alluxio的底层存储系统,并且HDFS具有特殊的配置时,Alluxio同样需要进行额外配置,以使得Alluxio能够\n正常访问挂载的HDFS集群.")]),t._v(" "),a("p",[t._v("本文档展示了如何在Fluid中以声明式的方式完成Alluxio所需的特殊配置. 更多信息请参考"),a("a",{attrs:{href:"https://docs.alluxio.io/os/user/stable/cn/ufs/HDFS.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("在HDFS上配置Alluxio"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"前提条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前提条件"}},[t._v("#")]),t._v(" 前提条件")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/fluid-cloudnative/fluid",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fluid"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("可与Kubernetes环境网络连通的HDFS集群")])]),t._v(" "),a("p",[t._v("请参考"),a("a",{attrs:{href:"https://github.com/fluid-cloudnative/fluid/blob/master/docs/zh/userguide/install.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fluid安装文档"),a("OutboundLink")],1),t._v("完成安装")]),t._v(" "),a("h2",{attrs:{id:"运行示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行示例"}},[t._v("#")]),t._v(" 运行示例")]),t._v(" "),a("p",[a("strong",[t._v("从HDFS配置文件创建ConfigMap")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ kubectl create configmap <configmap-name> --from-file=/path/to/hdfs-site.xml --from-file=/path/to/core-site.xml\n")])])]),a("p",[a("strong",[t._v("创建Dataset资源对象")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("$ cat << EOF "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" dataset.yaml\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" data.fluid.io/v1alpha1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dataset\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hdfs\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hdfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//<namenode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("<port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hdfs\nEOF\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ kubectl create -f dataset.yaml\n")])])]),a("p",[a("strong",[t._v("创建AlluxioRuntime资源对象")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("$ cat << EOF "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" runtime.yaml\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" data.fluid.io/v1alpha1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" AlluxioRuntime\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hdfs\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hadoopConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <configmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\nEOF\n")])])]),a("p",[a("code",[t._v("configmap-name")]),t._v("须为之前创建的ConfigMap资源对象, 该ConfigMap必须与创建的AlluxioRuntime同处于同一Namespace. 其中必须包含以"),a("code",[t._v("hdfs-site.xml")]),t._v("或"),a("code",[t._v("core-site.xml")]),t._v("为键的键值对. Fluid会检查\n该ConfigMap中的内容,并从中选取"),a("code",[t._v("hdfs-site.xml")]),t._v("以及"),a("code",[t._v("core-site.xml")]),t._v("的键值对并以文件的形式挂载到Alluxio的各个Pod中.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ kubectl create -f runtime.yaml\n")])])]),a("p",[a("strong",[t._v("在Alluxio中查看HDFS配置文件")])]),t._v(" "),a("p",[t._v("待Alluxio集群启动后,ConfigMap中的HDFS配置文件将被挂载到 alluxio-master Pod 和 alluxio-worker Pod中各容器的"),a("code",[t._v("/hdfs-config")]),t._v("目录下:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ kubectl exec my-hdfs-master-0 -- ls /hdfs-config\nhdfs-site.xml  core-site.xml\n")])])]),a("p",[t._v("至此, Alluxio能够根据用户指定的配置文件正常地访问HDFS集群.")])])}),[],!1,null,null,null);a.default=n.exports}}]);