(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{425:function(a,t,e){"use strict";e.r(t);var s=e(19),n=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"fluid-快速上手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fluid-快速上手"}},[a._v("#")]),a._v(" Fluid 快速上手")]),a._v(" "),t("p",[a._v("本文档介绍了如何创建或使用 Kubernetes 集群环境，通过 Helm 完成 Fluid 安装部署，并使用 Fluid 创建数据集。")]),a._v(" "),t("h2",{attrs:{id:"前置需求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置需求"}},[a._v("#")]),a._v(" 前置需求")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Kubernetes 1.14+")]),a._v(" "),t("p",[a._v("如果你目前没有满足条件的 Kubernetes 环境, 那么我们推荐你选择官方认证的 Kubernetes 云服务, 通常情况下, 你仅需寥寥几步即可快速获得一个专属的 Kubernetes 环境, 以下列出了部分经过认证的 Kubernetes 云服务:")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.aliyun.com/product/kubernetes",target:"_blank",rel:"noopener noreferrer"}},[a._v("阿里云容器服务"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://aws.amazon.com/eks/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Amazon Elastic Kubernetes Service"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/aks/tutorial-kubernetes-deploy-cluster",target:"_blank",rel:"noopener noreferrer"}},[a._v("Azure Kubernetes Service"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://cloud.google.com/kubernetes-engine/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Google Kubernetes Engine"),t("OutboundLink")],1)])]),a._v(" "),t("blockquote",[t("p",[a._v("注意: 考虑到 Minikube 功能的局限性,我们不推荐使用 Minikube 进行接下来的步骤")])])]),a._v(" "),t("li",[t("p",[a._v("Kubectl 1.14+")]),a._v(" "),t("p",[a._v("请确保Kubectl已经正确配置使其能够与你的Kubernetes环境进行交互")])]),a._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://helm.sh/docs/intro/install/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Helm 3"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("在接下来的步骤中, 将使用Helm 3进行 Fluid 的快速安装")])])]),a._v(" "),t("h2",{attrs:{id:"安装fluid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装fluid"}},[a._v("#")]),a._v(" 安装Fluid")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("创建命名空间")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ kubectl create ns fluid-system\n")])])])]),a._v(" "),t("li",[t("p",[a._v("从 Github 仓库"),t("a",{attrs:{href:"https://github.com/fluid-cloudnative/fluid/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("Release页面"),t("OutboundLink")],1),a._v("下载最新版本的Fluid")])]),a._v(" "),t("li",[t("p",[a._v("使用 Helm 安装 Fluid")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" fluid fluid-"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(".tgz\nNAME: fluid\nLAST DEPLOYED: Tue Jul  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(":22:07 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),a._v("\nNAMESPACE: default\nSTATUS: deployed\nREVISION: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\nTEST SUITE: None\n")])])])]),a._v(" "),t("li",[t("p",[a._v("查看Fluid的运行状态")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ kubectl get po "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" fluid-system\nNAME                                         READY   STATUS    RESTARTS   AGE\nalluxioruntime-controller-64948b68c9-zzsx2   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          108s\ncsi-nodeplugin-fluid-2mfcr                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("/2     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          108s\ncsi-nodeplugin-fluid-l7lv6                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("/2     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          108s\ndataset-controller-5465c4bbf9-5ds5p          "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          108s\n")])])])])]),a._v(" "),t("h2",{attrs:{id:"创建dataset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建dataset"}},[a._v("#")]),a._v(" 创建dataset")]),a._v(" "),t("p",[a._v("Fluid提供了云原生的数据加速和管理能力，并抽象出了"),t("code",[a._v("数据集(Dataset)")]),a._v("概念方便用户管理，接下来将演示如何用 Fluid 创建一个数据集。")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("创建一个Dataset CRD对象，其中描述了数据集的来源。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ cat"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("dataset.yaml")]),a._v("\napiVersion: data.fluid.io/v1alpha1\nkind: Dataset\nmetadata:\n  name: demo\nspec:\n  mounts:\n    - mountPoint: https://mirrors.bit.edu.cn/apache/spark/\n      name: spark\nEOF")]),a._v("\n")])])]),t("p",[a._v("执行安装")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ kubectl create -f dataset.yaml\n")])])])]),a._v(" "),t("li",[t("p",[a._v("创建 "),t("code",[a._v("AlluxioRuntime")]),a._v(" CRD对象，用来描述支持这个数据集的 Runtime, 在这里我们使用"),t("a",{attrs:{href:"https://www.alluxio.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Alluxio"),t("OutboundLink")],1),a._v("作为其Runtime")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[a._v("$ cat<<EOF "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("runtime.yaml\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" data.fluid.io/v1alpha1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" AlluxioRuntime\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" demo\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("replicas")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tieredstore")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("levels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mediumtype")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" MEM\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /dev/shm\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("quota")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 2Gi\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("high")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.95"')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("low")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.7"')]),a._v("\nEOF\n")])])]),t("p",[a._v("使用"),t("code",[a._v("kubectl")]),a._v("完成创建")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" runtime.yaml  \n")])])])]),a._v(" "),t("li",[t("p",[a._v("接下来，我们创建一个应用容器来使用该数据集，我们将多次访问同一数据，并比较访问时间来展示 Fluid 的加速效果。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ cat"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("app.yaml")]),a._v("\napiVersion: v1\nkind: Pod\nmetadata:\n  name: demo-app\nspec:\n  containers:\n    - name: demo\n      image: nginx\n      volumeMounts:\n        - mountPath: /data\n          name: demo\n  volumes:\n    - name: demo\n      persistentVolumeClaim:\n        claimName: demo\nEOF")]),a._v("\n")])])]),t("p",[a._v("使用"),t("code",[a._v("kubectl")]),a._v("完成创建")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ kubectl create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" app.yaml  \n")])])])]),a._v(" "),t("li",[t("p",[a._v("登录到应用容器中访问数据，初次访问会花费更长时间。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ kubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" demo-app -- "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("du")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sh")]),a._v(" /data/spark/spark-3.0.1/spark-3.0.1-bin-without-hadoop.tgz\n150M\t/data/spark/spark-3.0.1/spark-3.0.1-bin-without-hadoop.tgz\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("time")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" /data/spark/spark-3.0.1/spark-3.0.1-bin-without-hadoop.tgz /dev/null\nreal\t0m13.171s\nuser\t0m0.002s\nsys\t0m0.028s\n")])])])]),a._v(" "),t("li",[t("p",[a._v("为了避免其他因素(比如 page cache )对结果造成影响，我们将删除之前的容器，新建相同的应用，尝试访问同样的文件。由于此时文件已经被 "),t("code",[a._v("Alluxio")]),a._v(" 缓存，可以看到第二次访问所需时间远小于第一次。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ kubectl delete "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" app.yaml "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" kubectl create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" app.yaml\n$ kubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" demo-app -- "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("time")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" /data/spark/spark-3.0.1/spark-3.0.1-bin-without-hadoop.tgz /dev/null\nreal\t0m0.034s\nuser\t0m0.001s\nsys\t0m0.032s\n")])])])])]),a._v(" "),t("p",[a._v("到这里，我们简单地创建了一个数据集并实现了数据集的抽象管理与加速, 更多有关 Fluid 的更详细的信息, 请参考以下示例文档:")]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/zh/samples/"}},[a._v("远程文件访问加速")])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/zh/samples/data_co_locality.html"}},[a._v("数据缓存亲和性调度")])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/zh/samples/machinelearning.html"}},[a._v("用Fluid加速机器学习训练")])],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);