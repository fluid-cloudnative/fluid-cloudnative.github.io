(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{402:function(e,a,t){"use strict";t.r(a);var n=t(19),s=Object(n.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"demo-accelerate-machine-learning-training-with-fluid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#demo-accelerate-machine-learning-training-with-fluid"}},[e._v("#")]),e._v(" DEMO - Accelerate Machine Learning Training with Fluid")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://fluid-imgs.oss-cn-shanghai.aliyuncs.com/public/video/machineLearning.mp4",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://fluid-imgs.oss-cn-shanghai.aliyuncs.com/public/imgs/machineLearning.png",alt:""}}),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("This article describes how to deploy "),a("a",{attrs:{href:"http://www.image-net.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ImageNet"),a("OutboundLink")],1),e._v(" dataset stored on "),a("a",{attrs:{href:"https://cn.aliyun.com/product/oss",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aliyun OSS"),a("OutboundLink")],1),e._v(" to Kubernetes cluster with Fluid, and train a ResNet-50 model on this dataset using "),a("a",{attrs:{href:"https://github.com/kubeflow/arena",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arena"),a("OutboundLink")],1),e._v(". In this article, we perform machine learning training on 4 nodes, each node with 8 GPU cards.")]),e._v(" "),a("h2",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/fluid-cloudnative/fluid",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fluid"),a("OutboundLink")],1),e._v(" (version >= 0.1.0)")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/kubeflow/arena",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arena"),a("OutboundLink")],1),e._v("（version >= 0.4.0）")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/tensorflow/tensorflow",target:"_blank",rel:"noopener noreferrer"}},[e._v("TensorFlow"),a("OutboundLink")],1),e._v(" (version = 1.14)")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/horovod/horovod",target:"_blank",rel:"noopener noreferrer"}},[e._v("Horovod"),a("OutboundLink")],1),e._v(" (version=0.18.1)")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/tensorflow/benchmarks/tree/cnn_tf_v1.14_compatible",target:"_blank",rel:"noopener noreferrer"}},[e._v("Benchmark"),a("OutboundLink")],1)])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("NOTE")]),e._v(":")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("The document requires Fluid installed on your Kubernetes cluster. Please refer to "),a("RouterLink",{attrs:{to:"/guide/get_started.html"}},[e._v("Fluid Installation Guide")]),e._v(" to finish installation before going to the next step.")],1)]),e._v(" "),a("li",[a("p",[e._v("Arena is a CLI that is convenient for data scientists to run and monitor machine learning tasks. See "),a("a",{attrs:{href:"https://github.com/kubeflow/arena/blob/master/docs/installation/index.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arena Installation Tutorial"),a("OutboundLink")],1),e._v(" for more information.")])]),e._v(" "),a("li",[a("p",[e._v("This Demo uses Horovod + TensorFlow + Benchmark, they are all open source version.")])])])]),e._v(" "),a("h2",{attrs:{id:"deploy-dataset-on-kubernetes-cluster-with-fluid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-dataset-on-kubernetes-cluster-with-fluid"}},[e._v("#")]),e._v(" Deploy Dataset on Kubernetes Cluster with Fluid")]),e._v(" "),a("h3",{attrs:{id:"create-dataset-and-runtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-dataset-and-runtime"}},[e._v("#")]),e._v(" Create Dataset and Runtime")]),e._v(" "),a("p",[e._v("The following "),a("code",[e._v("dataset.yaml")]),e._v(" file defined a "),a("code",[e._v("Dataset")]),e._v(" and "),a("code",[e._v("Runtime")]),e._v("  separated by "),a("code",[e._v("---")]),e._v(".")]),e._v(" "),a("p",[e._v("The dataset is stored on "),a("a",{attrs:{href:"https://cn.aliyun.com/product/oss",target:"_blank",rel:"noopener noreferrer"}},[e._v("Alibaba Cloud OSS"),a("OutboundLink")],1),e._v(". To ensure that Alluxio can successfully mount the dataset, please make sure that configurations in the "),a("code",[e._v("dataset.yaml")]),e._v(" are correct set, including "),a("code",[e._v("mountPoint")]),e._v(", "),a("code",[e._v("fs.oss.accessKeyId")]),e._v(", "),a("code",[e._v("fs.oss.accessKeySecret")]),e._v(" and "),a("code",[e._v("fs.oss.endpoint")]),e._v(".")]),e._v(" "),a("blockquote",[a("p",[e._v("See Alluxio's official document "),a("a",{attrs:{href:"https://docs.alluxio.io/os/user/stable/en/ufs/OSS.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Aliyun Object Storage Service"),a("OutboundLink")],1),e._v(" for more examples of using OSS in Alluxio.")]),e._v(" "),a("p",[e._v("If you'd like to prepare dataset by yourself， please download the dataset from "),a("a",{attrs:{href:"http://image-net.org/download-images",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://image-net.org/download-images"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("If you'd like to download the imagenet dataset from us, please open an issue in Fluid community to ask for it.")])]),e._v(" "),a("p",[e._v("This document takes 4 machines to training machine learning tasks, so "),a("code",[e._v("spec.replicas")]),e._v(" is set to "),a("code",[e._v("4")]),e._v(". To ensure that the data is cached on the V100 machine, "),a("code",[e._v("nodeAffinity")]),e._v(" is configured. In addition, the following configuration file "),a("code",[e._v("dataset.yaml")]),e._v(" also sets many parameters based on our experience to optimize the IO performance of Alluxio in machine learning tasks, including Alluxio, Fuse and JVM levels. You can adjust these parameters according to the test environment and task requirements.")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" dataset.yaml")]),e._v('\napiVersion: data.fluid.io/v1alpha1\nkind: Dataset\nmetadata:\n  name: imagenet\nspec:\n  mounts:\n  - mountPoint: oss://<OSS_BUCKET>/<OSS_DIRECTORY>/\n    name: imagenet\n    options:\n      fs.oss.accessKeyId: <OSS_ACCESS_KEY_ID>\n      fs.oss.accessKeySecret: <OSS_ACCESS_KEY_SECRET>\n      fs.oss.endpoint: <OSS_ENDPOINT>\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n        - matchExpressions:\n            - key: aliyun.accelerator/nvidia_name\n              operator: In\n              values:\n                - Tesla-V100-SXM2-16GB\n---\napiVersion: data.fluid.io/v1alpha1\nkind: AlluxioRuntime\nmetadata:\n  name: imagenet\nspec:\n  replicas: 4\n  data:\n    replicas: 1\n#  alluxioVersion:\n#    image: registry.cn-huhehaote.aliyuncs.com/alluxio/alluxio\n#    imageTag: "2.3.0-SNAPSHOT-bbce37a"\n#    imagePullPolicy: Always\n  tieredstore:\n    levels:\n      - mediumtype: SSD\n        path: /var/lib/docker/alluxio\n        quota: 50Gi\n        high: "0.99"\n        low: "0.8"\nEOF')]),e._v("\n")])])]),a("p",[e._v("Create Dataset and Alluxio Runtime with:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ kubectl create "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" dataset.yaml\n")])])]),a("p",[e._v("Check the status Alluxio Runtime, and  there should be "),a("code",[e._v("1")]),e._v(" Master，"),a("code",[e._v("4")]),e._v(" Worker and "),a("code",[e._v("4")]),e._v(" Fuse running:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ kubectl describe alluxioruntime imagenet \nName:         imagenet\nNamespace:    default\nLabels:       "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nAnnotations:  "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nAPI Version:  data.fluid.io/v1alpha1\nKind:         AlluxioRuntime\nMetadata:\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# more metadata")]),e._v("\nSpec:\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# more spec")]),e._v("\nStatus:\n  Cache States:\n    Cache Capacity:     200GiB\n    Cached:             0B\n    Cached Percentage:  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("%\n  Conditions:\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# more conditions")]),e._v("\n  Current Fuse Number Scheduled:    "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n  Current Master Number Scheduled:  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n  Current Worker Number Scheduled:  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n  Desired Fuse Number Scheduled:    "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n  Desired Master Number Scheduled:  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n  Desired Worker Number Scheduled:  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n  Fuse Number Available:            "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n  Fuse Numb    Status:                True\n    Type:                  Ready\n  Phase:                   Bound\n  Runtimes:\n    Category:   Accelerate\n    Name:       imagenet\n    Namespace:  default\n    Type:       alluxio\n  Ufs Total:    "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("143")]),e._v(".7GiB\nEvents:         "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("At the same time, Dataset is bound to Alluxio Runtime:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ kubectl describe dataset\nName:         imagenet\nNamespace:    default\nLabels:       "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nAnnotations:  "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nAPI Version:  data.fluid.io/v1alpha1\nKind:         Dataset\nMetadata:\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# more metadata")]),e._v("\nSpec:\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# more spec")]),e._v("\nStatus:\n  Cache States:\n    Cache Capacity:     200GiB\n    Cached:             0B\n    Cached Percentage:  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("%\n  Conditions:\n    Last Transition Time:  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2020")]),e._v("-08-18T11:01:09Z\n    Last Update Time:      "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2020")]),e._v("-08-18T11:02:48Z\n    Message:               The ddc runtime is ready.\n    Reason:                DatasetReady\n    Status:                True\n    Type:                  Ready\n  Phase:                   Bound\n  Runtimes:\n    Category:   Accelerate\n    Name:       imagenet\n    Namespace:  default\n    Type:       alluxio\n  Ufs Total:    "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("143")]),e._v(".7GiB\nEvents:         "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("A pv and pvc named "),a("code",[e._v("imagenet")]),e._v(" are successfully created. So far, the dataset stored on cloud has been successfully deployed to the Kubernetes cluster.")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ kubectl get pv,pvc\nNAME                        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM              STORAGECLASS   REASON   AGE\npersistentvolume/imagenet   100Gi      RWX            Retain           Bound    default/imagenet                           7m11s\n\nNAME                             STATUS   VOLUME     CAPACITY   ACCESS MODES   STORAGECLASS   AGE\npersistentvolumeclaim/imagenet   Bound    imagenet   100Gi      RWX                           7m11s\n")])])]),a("h2",{attrs:{id:"example-run-deep-learning-frameworks-using-arena"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-run-deep-learning-frameworks-using-arena"}},[e._v("#")]),e._v(" Example: Run Deep Learning Frameworks Using Arena")]),e._v(" "),a("p",[a("code",[e._v("Arena")]),e._v(" provides a convenient way to help users submit and monitor machine learning tasks. In this article, we use "),a("code",[e._v("Arena")]),e._v(" to simplify the deployment process of machine learning tasks.")]),e._v(" "),a("p",[e._v("If you have installed "),a("code",[e._v("Arena")]),e._v(" and dataset has been successfully deployed to the local cluster, you can start training a ResNet50 model by simply executing the following command:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("arena submit mpi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--name")]),e._v(" horovod-resnet50-v2-4x8-fluid "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--gpus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--workers")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    --working-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/horovod-demo/tensorflow-demo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--data")]),e._v(" imagenet:/data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DATA_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/data/imagenet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("num_batch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("datasets_num_private_threads")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--image")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("registry.cn-hangzhou.aliyuncs.com/tensorflow-samples/horovod-benchmark-dawnbench-v2:0.18.1-tf1.14.0-torch1.2.0-mxnet1.5.0-py3.6 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    ./launch-example.sh "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v("\n")])])]),a("p",[e._v("Notes：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("--name")]),e._v("：specify the name of job, "),a("code",[e._v("horovod-resnet50-v2-4x8-fluid")]),e._v(" in this example")]),e._v(" "),a("li",[a("code",[e._v("--workers")]),e._v("：specify the number of nodes (workers) participating in training")]),e._v(" "),a("li",[a("code",[e._v("--gpus")]),e._v("：specify the number of GPUs used by each worker")]),e._v(" "),a("li",[a("code",[e._v("--working-dir")]),e._v("：specify working directory")]),e._v(" "),a("li",[a("code",[e._v("--data")]),e._v("：tell workers to mount a volume named "),a("code",[e._v("imagenet")]),e._v(" to the directory "),a("code",[e._v("/data")])]),e._v(" "),a("li",[a("code",[e._v("-e DATA_DIR")]),e._v("：specify the directory where dataset locates")]),e._v(" "),a("li",[a("code",[e._v("./launch-example.sh 4 8")]),e._v("：run shell script to launch training process")])]),e._v(" "),a("p",[e._v("Check whether the task is executed normally:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ arena get horovod-resnet50-v2-4x8-fluid "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v("\nSTATUS: RUNNING\nNAMESPACE: default\nPRIORITY: N/A\nTRAINING DURATION: 16s\n\nNAME                           STATUS   TRAINER  AGE  "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("INSTANCE")]),e._v("                                      NODE\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-launcher-czlfn  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".1.21\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-worker-0        "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".1.16\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-worker-1        "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".1.21\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-worker-2        "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".1.25\nhorovod-resnet50-v2-4x8-fluid  RUNNING  MPIJOB   16s  horovod-resnet50-v2-4x8-fluid-worker-3        "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".3.29\n")])])]),a("p",[e._v("If you find that "),a("code",[e._v("4")]),e._v(" workers are in the "),a("code",[e._v("RUNNING")]),e._v(" state, congratulations!  It means that you have successfully started the training.")]),e._v(" "),a("p",[e._v("If you want to know where the training is going, please check the Arena log:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ arena logs "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--tail")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("100")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" horovod-resnet50-v2-4x8-fluid\n")])])]),a("h2",{attrs:{id:"clean-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean-up"}},[e._v("#")]),e._v(" Clean Up")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ kubectl delete "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" dataset.yaml\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);