(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{383:function(a,e,s){"use strict";s.r(e);var t=s(19),r=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"developer-guide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#developer-guide"}},[a._v("#")]),a._v(" Developer Guide")]),a._v(" "),e("h2",{attrs:{id:"requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[a._v("#")]),a._v(" Requirements")]),a._v(" "),e("ul",[e("li",[a._v("Git")]),a._v(" "),e("li",[a._v("Golang (version >= 1.13)")]),a._v(" "),e("li",[a._v("Docker (version >= 19.03)")]),a._v(" "),e("li",[a._v("Kubernetes (version >= 1.14)")]),a._v(" "),e("li",[a._v("GNU Make")])]),a._v(" "),e("p",[a._v("For installation of Golang, please refer to "),e("a",{attrs:{href:"https://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Install Golang"),e("OutboundLink")],1)]),a._v(" "),e("p",[e("code",[a._v("make")]),a._v(" is usually in a "),e("code",[a._v("build-essential")]),a._v(" package in your distribution's package manager of choice. Make sure you have "),e("code",[a._v("make")]),a._v(" on your machine.")]),a._v(" "),e("p",[a._v("There're great chances that you may want to run your implementation in a real Kubernetes cluster, so probably a Docker is needed for some necessary operations like building images.\nSee "),e("a",{attrs:{href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Install Docker"),e("OutboundLink")],1),a._v(" for more information.")]),a._v(" "),e("h2",{attrs:{id:"how-to-build-run-and-debug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-build-run-and-debug"}},[a._v("#")]),a._v(" How to Build, Run and Debug")]),a._v(" "),e("h3",{attrs:{id:"get-source-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-source-code"}},[a._v("#")]),a._v(" Get Source Code")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOPATH")]),a._v("/src/github.com/fluid-cloudnative/\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOPATH")]),a._v("/src/github.com/fluid-cloudnative\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/fluid-cloudnative/fluid.git\n")])])]),e("blockquote",[e("p",[e("strong",[a._v("NOTE")]),a._v(": In this document, we build, run and debug under non-module environment.")]),a._v(" "),e("p",[a._v("See "),e("a",{attrs:{href:"https://github.com/golang/go/wiki/Modules",target:"_blank",rel:"noopener noreferrer"}},[a._v("Go Modules"),e("OutboundLink")],1),a._v(" for more information if some issue occurs to you.")])]),a._v(" "),e("h3",{attrs:{id:"build-binary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-binary"}},[a._v("#")]),a._v(" Build Binary")]),a._v(" "),e("p",[e("code",[a._v("Makefile")]),a._v(" under project directory provides many tasks you may want to use including Test, Build, Debug, Deploy etc.")]),a._v(" "),e("p",[a._v("You can simply get a binary by running:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# build dataset-controller, alluxioruntime-controller and csi Binary")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" build\n")])])]),e("p",[a._v("By default, the binary would be put under "),e("code",[a._v("<fluid-path>/bin")]),a._v(".")]),a._v(" "),e("h3",{attrs:{id:"build-images"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-images"}},[a._v("#")]),a._v(" Build Images")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("Set tags for images")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# set name for image of dataset-controller")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("DATASET_CONTROLLER_IMG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("img-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# set name for image of alluxioruntime-controller")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ALLUXIORUNTIME_CONTROLLER_IMG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("img-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# set name for image of  CSI")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CSI_IMG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("csi-img-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# set name for image of init-user")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("INIT_USERS_IMG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your-namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("csi-img-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# build all images")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" docker-build-all\n")])])]),e("p",[a._v("Before running Fluid, you need to push the built image to an accessible image registry.")])]),a._v(" "),e("li",[e("p",[a._v("Login to a image registry")]),a._v(" "),e("p",[a._v("Make sure you've login to a docker image registry that you'd like to push your image to:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" login "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("docker-registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[a._v("push your images:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" docker-push-all\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"run-your-fluid-on-kubernetes-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-your-fluid-on-kubernetes-cluster"}},[a._v("#")]),a._v(" Run Your Fluid on Kubernetes Cluster")]),a._v(" "),e("p",[a._v("In the following steps, we assume you have properly configured "),e("code",[a._v("KUBECONFIG")]),a._v(" environment variable or set up "),e("code",[a._v("~/.kube/config")]),a._v(". See "),e("a",{attrs:{href:"https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kubeconfig docs"),e("OutboundLink")],1),a._v(" for more information.")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("Push your images to a image registry accessible to your Kubernetes cluster")]),a._v(" "),e("p",[a._v("If your images are pushed to some private repositories, make sure your Kubernetes cluster hold credentials for accessing those repositories.")])]),a._v(" "),e("li",[e("p",[a._v("Change image  in the samples we provide:")]),a._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# <fluid-path>/config/fluid/patches/image_in_manager.yaml")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" manager\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" <registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("/<namespace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("/<img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("repo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("<img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("\n")])])]),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# <fluid-path>/config/fluid/patches/image_in_csi-plugin.yaml")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" plugins\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" <registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("/<namespace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("/<csi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("<csi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[a._v("Install CRDs")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" config/crd\n")])])]),e("p",[a._v("Check CRD with:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl get crd "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" fluid\nalluxiodataloads.data.fluid.io          "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),a._v("-08-22T03:53:46Z\nalluxioruntimes.data.fluid.io           "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),a._v("-08-22T03:53:46Z\ndatasets.data.fluid.io                  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),a._v("-08-22T03:53:46Z\n")])])])]),a._v(" "),e("li",[e("p",[a._v("Install your implementation")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" config/fluid\n")])])]),e("p",[a._v("Check Fluid system with:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl get pod "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" fluid-system\nNAME                                  READY   STATUS    RESTARTS   AGE\ncontroller-manager-7fd6457ccf-p7j2x   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          84s\ncsi-nodeplugin-fluid-pj9tv            "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("/2     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          84s\ncsi-nodeplugin-fluid-t8ctj            "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("/2     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          84s\n")])])])]),a._v(" "),e("li",[e("p",[a._v("Run samples to verify your implementation")]),a._v(" "),e("p",[a._v("Here is a sample provided by us, you may want to rewrite it according to your implementation.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" config/samples\n")])])]),e("p",[a._v("Check sample pods:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl get pod\nNAME                   READY   STATUS    RESTARTS   AGE\ncifar10-fuse-vb6l4     "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          6m15s\ncifar10-fuse-vtqpx     "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          6m15s\ncifar10-master-0       "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("/2     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          8m24s\ncifar10-worker-729xz   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("/2     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          6m15s\ncifar10-worker-d6kmd   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("/2     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          6m15s\nnginx-0                "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          8m30s\nnginx-1                "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          8m30s\n")])])])]),a._v(" "),e("li",[e("p",[a._v("Check logs to verify your implementation")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl logs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" fluid-system "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("controller_manager_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),e("li",[e("p",[a._v("Clean up")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl delete "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" config/samples\n$ kubectl delete "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" config/fluid\n$ kubectl delete "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" config/crd\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"unit-testing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unit-testing"}},[a._v("#")]),a._v(" Unit Testing")]),a._v(" "),e("h4",{attrs:{id:"basic-tests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic-tests"}},[a._v("#")]),a._v(" Basic Tests")]),a._v(" "),e("p",[a._v("Execute following command from project root to run basic unit tests:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" unit-test\n")])])]),e("h4",{attrs:{id:"integration-tests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#integration-tests"}},[a._v("#")]),a._v(" Integration Tests")]),a._v(" "),e("p",[e("code",[a._v("kubebuilder")]),a._v(" provided a integration test framework based on "),e("a",{attrs:{href:"https://godoc.org/sigs.k8s.io/controller-runtime/pkg/envtest",target:"_blank",rel:"noopener noreferrer"}},[a._v("envtest"),e("OutboundLink")],1),a._v(" package. You must install "),e("code",[a._v("kubebuilder")]),a._v(" before running integration tests:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("os")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("go "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("env")]),a._v(" GOOS"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("arch")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("go "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("env")]),a._v(" GOARCH"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" https://go.kubebuilder.io/dl/2.3.1/"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${os}")]),a._v("/"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${arch}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xz")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" /tmp/\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" /tmp/kubebuilder_2.3.1_"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${os}")]),a._v("_"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${arch}")]),a._v(" /usr/local/kubebuilder\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v(":/usr/local/kubebuilder/bin\n")])])]),e("p",[a._v("Next, run all unit tests (integration tests included) with:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),e("blockquote",[e("p",[e("strong",[a._v("NOTE:")]),a._v(" When running unit tests on a non-linux system such as macOS, if testing failed and says "),e("code",[a._v("exec format error")]),a._v(", you may need to check whether "),e("code",[a._v("GOOS")]),a._v(" is consistent with your actual OS.")])]),a._v(" "),e("h3",{attrs:{id:"debug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#debug"}},[a._v("#")]),a._v(" Debug")]),a._v(" "),e("p",[a._v("You can debug your program in multiple ways, here is just a brief guide for how to debug with "),e("code",[a._v("go-delve")])]),a._v(" "),e("p",[e("strong",[a._v("Prerequisites")])]),a._v(" "),e("p",[a._v("Make sure you have "),e("code",[a._v("go-delve")]),a._v(" installed. See "),e("a",{attrs:{href:"https://github.com/go-delve/delve/tree/master/Documentation/installation",target:"_blank",rel:"noopener noreferrer"}},[a._v("go-delve installation guide"),e("OutboundLink")],1),a._v(" for more information")]),a._v(" "),e("p",[e("strong",[a._v("Debug locally")])]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# build & debug in one line")]),a._v("\n$ dlv debug "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("fluid-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/cmd/controller/main.go\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# debug binary")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" manager\n$ dlv "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" bin/manager\n")])])]),e("p",[e("strong",[a._v("Debug remotely")])]),a._v(" "),e("p",[a._v("On remote host:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ dlv debug "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--headless")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--listen")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('":12345"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--log")]),a._v(" --api-version"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" cmd/controller/main.go\n")])])]),e("p",[a._v("The command above will make "),e("code",[a._v("go-delve")]),a._v(" start a debug service and listen for port 12345.")]),a._v(" "),e("p",[a._v("On local host, connect to the debug service:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ dlv connect "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<remote-address>:12345"')]),a._v(" --api-version"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n")])])]),e("blockquote",[e("p",[a._v("Note: To debug remotely, make sure the specified port is not occupied and the firewall has been properly configured.")])])])}),[],!1,null,null,null);e.default=r.exports}}]);